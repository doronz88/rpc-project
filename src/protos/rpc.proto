syntax = "proto3";

package rpc;

enum ProtocolConstants {
  UNKNOWN = 0;
  SERVER_VERSION = 0x8888810;
  MESSAGE_MAGIC = 0x1234569;
}

enum Arch {
  ARCH_UNKNOWN = 0;
  ARCH_ARM64 = 1;
}

enum StatusCode {
  OK = 0;
  UNSUPPORTED_COMMAND = 1;
  MEMORY_ACCESS = 2;
  SPAWN_FAILED = 3;
  FILE_SYSTEM = 4;
}

enum CommandId {
  CMD_UNKNOWN = 0;
  CMD_EXEC = 1;
  CMD_DLOPEN = 2;
  CMD_DLCLOSE = 3;
  CMD_DLSYM = 4;
  CMD_CALL = 5;
  CMD_PEEK = 6;
  CMD_POKE = 7;
  CMD_LIST_DIR = 8;
  CMD_SHOW_OBJECT = 9;
  CMD_SHOW_CLASS = 10;
  CMD_DUMMY_BLOCK = 11;
  CMD_CLOSE = 12;
  CMD_GET_CLASS_LIST = 13;
  CMD_EXEC_CHUNK = 14;
  CMD_CUSTOM = 15;
}



message Command {
  int32 magic = 1;
  uint32 client_id = 17;
  CommandId cmd_id = 18;
  bytes payload = 19;
}


message Response {
  uint32 code = 2;
  bytes payload = 3;
}



message ReturnRegistersArm {
  uint64 x0 = 1;
  uint64 x1 = 2;
  uint64 x2 = 3;
  uint64 x3 = 4;
  uint64 x4 = 5;
  uint64 x5 = 6;
  uint64 x6 = 7;
  uint64 x7 = 8;

  double d0 = 9;
  double d1 = 10;
  double d2 = 11;
  double d3 = 12;
  double d4 = 13;
  double d5 = 14;
  double d6 = 15;
  double d7 = 16;
}

message Argument {
  oneof type {
    uint64 v_int = 1;
    double v_double = 2;
    string v_str = 3;
    bytes v_bytes = 4;
  }
}

message Handshake {
  uint32 magic = 1;
  Arch arch = 2;
  string sysname = 3;
  string machine = 4;
  string platform = 5;
  uint32 client_id = 6;
}

message ObjcClass {
  uint64 address = 1;
  string name = 2;
}

message CmdShowObject {uint64 address = 1;}

message ResponseShowObject {string description = 1;}

message CmdShowClass {uint64 address = 1;}

message ResponseShowClass {string description = 1;}

message CmdExecChunk {bytes buffer = 1;}

message ResponseCmdExecChunk {
  oneof type {
    bytes buffer = 1;
    uint32 exit_code = 2;
  }
}

message CmdDlopen {
  string filename = 1;
  int32 mode = 2;
}

message ResponseDlopen {uint64 handle = 1;}

message CmdDlclose {uint64 handle = 1;}

message ResponseDlclose {uint32 res = 1;}

message CmdDlsym {
  uint64 handle = 1;
  string symbol_name = 2;
}

message ResponseDlsym {uint64 ptr = 1;}

message CmdExec {
  bool background = 1;
  repeated string argv = 2;
  repeated string envp = 3;
}

message ResponseCmdExec {uint32 pid = 1;}

message CmdCall {
  uint64 address = 1;
  uint64 va_list_index = 2;
  repeated Argument argv = 3;
}
message ResponseCall {
  oneof return_values {
    ReturnRegistersArm arm_registers = 1;
    uint64 return_value = 2;
  }
}

message CmdPeek {
  uint64 address = 1;
  uint64 size = 2;
}

message ResponsePeek {bytes data = 1;}

message CmdPoke {
  uint64 address = 1;
  bytes data = 2;
}

message ResponsePoke {}

message CmdListDir {string path = 1;}

message CmdDummyBlock {}

message ResponseDummyBlock {
  uint64 address = 1;
  uint64 size = 2;
}

message CmdGetClassList {}

message ResponseGetClassList {repeated ObjcClass classes = 1;}

message ResponseError {
  StatusCode code = 1;
}

message ResponseListdir {
  uint64 magic = 1;
  uint64 dirp = 2;
  repeated DirEntry dir_entries = 3;
}

message DirEntry {
  uint64 d_type = 1;
  string d_name = 2;
  DirEntryStat lstat = 3;
  DirEntryStat stat = 4;
}

message DirEntryStat {
  uint64 errno1 = 1;
  uint64 st_dev = 2;
  uint64 st_mode = 3;
  uint64 st_nlink = 4;
  uint64 st_ino = 5;
  uint64 st_uid = 6;
  uint64 st_gid = 7;
  uint64 st_rdev = 8;
  uint64 st_size = 9;
  uint64 st_blocks = 10;
  uint64 st_blksize = 11;
  uint64 st_atime1 = 12;
  uint64 st_mtime1 = 13;
  uint64 st_ctime1 = 14;
}

message CmdClose {}

message CmdCustom {bytes content = 1;}

message ResponseCustom {bytes content = 1;}
